"use client";

import { Button } from "@/components/ui/button";
import { Download, Share2, MessageCircle } from "lucide-react";
import { toast } from "sonner";
import Link from "next/link";

interface SummaryActionsProps {
  summary: {
    id: string;
    title: string | null;
    summary_text: string;
    original_file_url: string | null;
    created_at: string;
  };
  variant?: "header" | "sidebar";
}

export default function SummaryActions({
  summary,
  variant = "header",
}: SummaryActionsProps) {
  const handleDownloadOriginal = async () => {
    if (!summary.original_file_url) {
      toast.error("Original file not available");
      return;
    }

    try {
      window.open(summary.original_file_url, "_blank");
      toast.success("Download started");
    } catch (error) {
      console.error("Download error:", error);
      toast.error("Failed to download file");
    }
  };

  const handleDownloadSummary = async () => {
    try {
      const summaryContent = `# ${summary.title || "Summary"}

Created: ${new Date(summary.created_at).toLocaleDateString()}

## AI Summary

${summary.summary_text}

---
Generated by Visura AI
`;

      const blob = new Blob([summaryContent], { type: "text/plain" });
      const url = URL.createObjectURL(blob);
      const link = document.createElement("a");
      link.href = url;
      link.download = `${summary.title || "summary"}-${
        new Date().toISOString().split("T")[0]
      }.txt`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);

      toast.success("Summary downloaded successfully");
    } catch (error) {
      console.error("Download error:", error);
      toast.error("Failed to download summary");
    }
  };

  const handleShare = async () => {
    const summaryUrl = window.location.href;
    const shareData = {
      title: summary.title || "AI Summary",
      text: `Check out this AI-generated summary: ${
        summary.title || "Summary"
      }`,
      url: summaryUrl,
    };

    try {
      if (navigator.share && navigator.canShare(shareData)) {
        await navigator.share(shareData);
        toast.success("Summary shared successfully");
      } else {
        await navigator.clipboard.writeText(summaryUrl);
        toast.success("Summary link copied to clipboard!");
      }
    } catch (error) {
      if (error instanceof Error && error.name === "AbortError") {
        return;
      }

      try {
        await navigator.clipboard.writeText(summaryUrl);
        toast.success("Summary link copied to clipboard!");
      } catch (clipboardError) {
        console.error("Share error:", error);
        toast.error("Failed to share summary");
      }
    }
  };

  if (variant === "header") {
    return (
      <div className="flex gap-2">
        <Link href={`/chatbot/${summary.id}`}>
          <Button variant="outline" size="sm" className="border-rose-600 text-rose-600 hover:bg-rose-50 hover:border-rose-700">
            <MessageCircle className="w-4 h-4 mr-2" />
            Chat
          </Button>
        </Link>
        <Button variant="outline" size="sm" onClick={handleShare}>
          <Share2 className="w-4 h-4 mr-2" />
          Share
        </Button>
        <Button variant="outline" size="sm" onClick={handleDownloadOriginal}>
          <Download className="w-4 h-4 mr-2" />
          Download
        </Button>
      </div>
    );
  }

  return (
    <div className="space-y-3">
      <Link href={`/chatbot/${summary.id}`} className="block">
        <Button className="w-full bg-rose-600 hover:bg-rose-700 text-white">
          <MessageCircle className="w-4 h-4 mr-2" />
          Chat with Document
        </Button>
      </Link>
      <Button
        className="w-full"
        variant="outline"
        onClick={handleDownloadSummary}
      >
        <Download className="w-4 h-4 mr-2" />
        Download Summary
      </Button>
      <Button className="w-full" variant="outline" onClick={handleShare}>
        <Share2 className="w-4 h-4 mr-2" />
        Share Summary
      </Button>
    </div>
  );
}
